PROJECT(sofadb)

CMAKE_MINIMUM_REQUIRED(VERSION 2.8)
ENABLE_TESTING()

SET(CMAKE_MODULE_PATH ${CMAKE_MODULE_PATH}  "${CMAKE_CURRENT_SOURCE_DIR}/cmake")

#SET(CMAKE_BUILD_TYPE Debug)
IF(NOT CMAKE_BUILD_TYPE)
  SET(CMAKE_BUILD_TYPE Debug CACHE STRING
	  "Choose the type of build, options are: None Debug Release RelWithDebInfo MinSizeRel."
	  FORCE)
ENDIF(NOT CMAKE_BUILD_TYPE)

IF(WIN32)
	ADD_DEFINITIONS(-DUNICODE -D_UNICODE -D_DEBUG)

	ADD_DEFINITIONS(-D_CRT_SECURE_NO_WARNINGS)
	SET(CMAKE_EXE_LINKER_FLAGS "${CMAKE_EXE_LINKER_FLAGS} /OPT:NOREF")
	IF(CMAKE_GENERATOR MATCHES "Visual Studio")
		# replace /MDd with /MTd
		STRING(REPLACE "/MDd" "/MTd" CMAKE_CXX_FLAGS_DEBUG_INIT
			${CMAKE_CXX_FLAGS_DEBUG_INIT})
		STRING(REPLACE "/MDd" "/MTd" CMAKE_C_FLAGS_DEBUG_INIT
			${CMAKE_C_FLAGS_DEBUG_INIT})
		STRING(REPLACE "/MD" "/MT" CMAKE_C_FLAGS_RELEASE
			${CMAKE_C_FLAGS_RELEASE})
		STRING(REPLACE "/MD" "/MT" CMAKE_C_FLAGS_RELWITHDEBINFO
			${CMAKE_C_FLAGS_RELWITHDEBINFO})
		STRING(REPLACE "/MD" "/MT" CMAKE_C_FLAGS_MINSIZEREL
			${CMAKE_C_FLAGS_MINSIZEREL})
		STRING(REPLACE "/MDd" "/MTd" CMAKE_C_FLAGS_DEBUG
			${CMAKE_C_FLAGS_DEBUG})
		STRING(REPLACE "/MD" "/MT" CMAKE_CXX_FLAGS_RELEASE
			${CMAKE_CXX_FLAGS_RELEASE})
		STRING(REPLACE "/MD" "/MT" CMAKE_CXX_FLAGS_RELWITHDEBINFO
			${CMAKE_CXX_FLAGS_RELWITHDEBINFO})
		STRING(REPLACE "/MD" "/MT" CMAKE_CXX_FLAGS_MINSIZEREL
			${CMAKE_CXX_FLAGS_MINSIZEREL})
		STRING(REPLACE "/MDd" "/MTd" CMAKE_CXX_FLAGS_DEBUG
			${CMAKE_CXX_FLAGS_DEBUG})
	ENDIF()
ELSEIF(UNIX)
	ADD_DEFINITIONS(-fPIC)
	SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++0x -fvisibility=hidden -fvisibility-inlines-hidden")
	SET(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -fvisibility=hidden")
ELSE()
	MESSAGE(FATAL_ERROR "Unsupported target OS!")
ENDIF()

FIND_PACKAGE(LevelDb REQUIRED)
FIND_PACKAGE(Boost 1.42 COMPONENTS thread regex date_time unit_test_framework)

CONFIGURE_FILE(
  "cmake/config.h.in"
  "${PROJECT_BINARY_DIR}/include/sofadb_generated_config.h"
)
INCLUDE_DIRECTORIES(${PROJECT_BINARY_DIR}/include)

ADD_SUBDIRECTORY(json_spirit)
ADD_SUBDIRECTORY(bigint)
ADD_SUBDIRECTORY(libsofadb)
ADD_SUBDIRECTORY(example)
ADD_SUBDIRECTORY(test)
